Абстракция в объектно-ориентированном программировании -
это процесс представления сущностей программы в упрощенной форме,
скрывая лишние детали и концентрируясь только на основных характеристиках объекта.

Основные идеи абстракции:
Упрощение: Абстракция позволяет сосредоточить внимание на важных аспектах объекта,
игнорируя детали, которые не являются релевантными для текущей задачи или контекста.

Использование интерфейсов: Создание интерфейсов или абстрактных классов для описания
общих свойств и методов, которые должны быть реализованы в конкретных классах.
Это позволяет скрыть детали реализации, фокусируя внимание на том, как объект
может быть использован, а не на том, как он реализован.

Уровни абстракции: Абстракции могут быть многоуровневыми. Вы можете иметь
абстрактный класс или интерфейс, описывающий общие характеристики, а затем
конкретные классы, реализующие эти характеристики.

Например, если вы создаете систему для работы с различными видами транспорта,
вы можете использовать абстракцию, создав интерфейс "Транспорт", который
содержит общие методы, такие как "двигаться()" или "останавливаться()",
и затем реализовать этот интерфейс в конкретных классах: "Автомобиль", "Поезд", "Самолет" и т.д.
Каждый конкретный класс будет иметь свою собственную реализацию этих методов,
но пользователь будет использовать общий интерфейс "Транспорт" для взаимодействия
с любым из этих видов транспорта.


Equals and HashCode;

1 .если для двух обетов equals возвращает true тогда HashCode - ы  должны быть ровны
2. если HashCode - ы двух обетов не ровны то equals должен возвращает false
